# -*- coding: utf-8 -*-
"""Insights-Gaza.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fewE_9SBN0yPMpSxNjYa1Ne6HDWrOnQl
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

file_path = '/content/drive/MyDrive/NLP_GAZA_Research/Data/Names_vs_Sentiments/F_Done_cleaned_name_sentiment_analysis.csv'

# Load while skipping problematic lines
df = pd.read_csv(file_path, low_memory=False, on_bad_lines='skip', encoding='ISO-8859-1')
df.head()

# Convert article_date to datetime
df['article_date'] = pd.to_datetime(df['article_date'], errors='coerce')

# Extract useful time features
df['year'] = df['article_date'].dt.year
df['month'] = df['article_date'].dt.month
df['day'] = df['article_date'].dt.day
df['year_month'] = df['article_date'].dt.to_period('M')

pivot = df[df['name'].isin(top_entities)].pivot_table(index='name', columns='year_month', values='sentiment', aggfunc='mean')

plt.figure(figsize=(15, 6))
sns.heatmap(pivot, cmap='coolwarm', center=0, linewidths=0.5, annot=False)
plt.title('Entity Sentiment Over Time')
plt.show()

df['name'].value_counts().head(20).plot(kind='barh', figsize=(8,8), color='skyblue')
plt.title('Top 20 Mentioned Entities')
plt.gca().invert_yaxis()
plt.xlabel('Mentions')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
sns.countplot(data=df, x='sentiment_label', order=df['sentiment_label'].value_counts().index, palette='coolwarm')
plt.title('Sentiment Distribution')
plt.xlabel('Sentiment')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

# Define common aliases or misspellings to unify
name_mapping = {
    'Netanyau': 'Netanyahu',
    'Binyamin Netanyahu': 'Netanyahu',
    'Benjamin Netanyahu': 'Netanyahu',
    'Benyamin Netanyahu': 'Netanyahu',
    'Netanayahu': 'Netanyahu',
    'Netayahu': 'Netanyahu',
    'Mr Blair': 'Blair',
    'Tony Blair': 'Blair',
    'Yasir Arafat' : 'Arafat',
    'Bidens' : 'Biden',
    'Clintons' : 'Clinton',
    'Arik Sharon' : 'Sharon',
    "George Bush's" : "George Bush"
    # Add more if needed
}
# Replace known variants with the standardized name
df['name'] = df['name'].replace(name_mapping)
top_names = df['name'].value_counts().head(10)

plt.figure(figsize=(10,6))
sns.barplot(x=top_names.values, y=top_names.index, palette='viridis')
plt.title('Top 10 Most Mentioned Names')
plt.xlabel('Mention Count')
plt.ylabel('Name')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Define common aliases or misspellings to unify
name_mapping = {
    'Netanyau': 'Netanyahu',
    'Binyamin Netanyahu': 'Netanyahu',
    'Benjamin Netanyahu': 'Netanyahu',
    'Benyamin Netanyahu': 'Netanyahu',
    'Netanayahu': 'Netanyahu',
    'Netayahu': 'Netanyahu',
    'Mr Blair': 'Blair',
    'Tony Blair': 'Blair',
    'Yasir Arafat' : 'Arafat',
    'Bidens' : 'Biden',
    'Clintons' : 'Clinton',
    'Arik Sharon' : 'Sharon',
    "George Bush's" : "George Bush",
    "Bush" : "George Bush"
}

# Replace known variants with the standardized name
df['name'] = df['name'].replace(name_mapping)

# Get top 10 after normalization
top_entities = df['name'].value_counts().head(10).index.tolist()
top_df = df[df['name'].isin(top_entities)]

# ---------- Plot ----------
plt.figure(figsize=(12, 6))
sns.countplot(data=top_df, y='name', hue='sentiment_label', order=top_entities)
plt.title('Sentiment Breakdown for Top 10 Names (Cleaned)')
plt.xlabel('Count')
plt.ylabel('Name')
plt.legend(title='Sentiment')
plt.show()

# ---------- Quantitative Summary ----------
print("\nQuantitative Sentiment Summary for Top 10 Names:\n")
summary = top_df.groupby(['name', 'sentiment_label']).size().unstack(fill_value=0)
summary = summary.loc[top_entities]  # Ensure correct order
print(summary)

